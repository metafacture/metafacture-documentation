digraph G {
  {
    node [margin=0 fontcolor=black fontsize=32 width=0.5 shape=oval style=filled]
    String [fillcolor=yellow fixedsize=false fillcolor="yellow", label=String]
    Reader [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Reader]
    Object [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Object]
    Map [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Map]
    Triple [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Triple]
    Void [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Void]
    ListMap [fillcolor=yellow fixedsize=false fillcolor="yellow", label=ListMap]
    Document [fillcolor=yellow fixedsize=false fillcolor="yellow", label=Document]
    StreamReceiver [fillcolor=yellow fixedsize=false fillcolor="yellow", label=StreamReceiver]
    XmlReceiver [fillcolor=yellow fixedsize=false fillcolor="yellow", label=XmlReceiver]
  }
  rankdir=LR
  concentrate=true

	StreamReceiver -> StreamReceiver [fillcolor="red", label="add-oreaggregation"];
	String -> String [fillcolor="red", label="add-preamble-epilogue"];
	Reader -> String [fillcolor="red", label="as-formeta-records"];
	Reader -> String [fillcolor="red", label="as-lines"];
	Reader -> String [fillcolor="red", label="as-records"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="batch-log"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="batch-reset"];
	Triple -> Triple [fillcolor="red", label="calculate-metrics"];
	Object -> Object [fillcolor="red", label="catch-object-exception"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="catch-stream-exception"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="change-id"];
	Triple -> StreamReceiver [fillcolor="red", label="collect-triples"];
	Triple -> Triple [fillcolor="red", label="count-triples"];
	String -> StreamReceiver [fillcolor="red", label="decode-aseq"];
	String -> StreamReceiver [fillcolor="red", label="decode-csv"];
	String -> StreamReceiver [fillcolor="red", label="decode-formeta"];
	Reader -> StreamReceiver [fillcolor="red", label="decode-html"];
	String -> StreamReceiver [fillcolor="red", label="decode-json"];
	String -> StreamReceiver [fillcolor="red", label="decode-mab"];
	String -> StreamReceiver [fillcolor="red", label="decode-marc21"];
	String -> StreamReceiver [fillcolor="red", label="decode-pica"];
	String -> String [fillcolor="red", label="decode-string"];
	Reader -> XmlReceiver [fillcolor="red", label="decode-xml"];
	String -> StreamReceiver [fillcolor="red", label="decode-yaml"];
	Object -> Object [fillcolor="red", label="decouple"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="defer-stream"];
	String -> Triple [fillcolor="red", label="digest-file"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="discard-events"];
	Object -> Object [fillcolor="red", label="draw-uniform-sample"];
	StreamReceiver -> String [fillcolor="red", label="encode-csv"];
	StreamReceiver -> String [fillcolor="red", label="encode-formeta"];
	StreamReceiver -> String [fillcolor="red", label="encode-json"];
	StreamReceiver -> String [fillcolor="red", label="encode-literals"];
	StreamReceiver -> String [fillcolor="red", label="encode-marc21"];
	StreamReceiver -> String [fillcolor="red", label="encode-marcxml"];
	StreamReceiver -> String [fillcolor="red", label="encode-pica"];
	StreamReceiver -> String [fillcolor="red", label="encode-xml"];
	StreamReceiver -> String [fillcolor="red", label="encode-yaml"];
	Reader -> String [fillcolor="red", label="extract-element"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="filter"];
	Object -> Object [fillcolor="red", label="filter-duplicate-objects"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="filter-null-values"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="filter-records-by-path"];
	String -> String [fillcolor="red", label="filter-strings"];
	Triple -> Triple [fillcolor="red", label="filter-triples"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="fix"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="flatten"];
	Document -> StreamReceiver [fillcolor="red", label="from-jdom-document"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-cg-xml"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-comarcxml"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-generic-xml"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-mabxml"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-marcxml"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="handle-picaxml"];
	Object -> Object [fillcolor="red", label="jscript"];
	String -> String [fillcolor="red", label="json-to-elasticsearch-bulk"];
	String -> String [fillcolor="red", label="lines-to-records"];
	StreamReceiver -> String [fillcolor="red", label="list-fix-paths"];
	StreamReceiver -> String [fillcolor="red", label="list-fix-values"];
	StreamReceiver -> String [fillcolor="red", label="literal-to-object"];
	Object -> Object [fillcolor="red", label="log-object"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="log-stream"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="log-stream-time"];
	Object -> Object [fillcolor="red", label="log-time"];
	Map -> StreamReceiver [fillcolor="red", label="map-to-stream"];
	String -> String [fillcolor="red", label="match"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="merge-batch-stream"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="merge-same-ids"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="morph"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="normalize-unicode-stream"];
	String -> String [fillcolor="red", label="normalize-unicode-string"];
	Object -> Object [fillcolor="red", label="object-batch-log"];
	Object -> Object [fillcolor="red", label="object-tee"];
	<unknown> -> StreamReceiver [fillcolor="red", label="object-to-literal"];
	String -> Reader [fillcolor="red", label="open-file"];
	String -> Reader [fillcolor="red", label="open-http"];
	String -> Reader [fillcolor="red", label="open-oaipmh"];
	String -> Reader [fillcolor="red", label="open-resource"];
	Reader -> Reader [fillcolor="red", label="open-tar"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="pass-through"];
	Object -> Void [fillcolor="red", label="print"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="rdf-macros"];
	Reader -> StreamReceiver [fillcolor="red", label="read-beacon"];
	String -> String [fillcolor="red", label="read-dir"];
	String -> Reader [fillcolor="red", label="read-string"];
	String -> Triple [fillcolor="red", label="read-triples"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="record-to-entity"];
	String -> StreamReceiver [fillcolor="red", label="regex-decode"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="remodel-pica-multiscript"];
	Triple -> Triple [fillcolor="red", label="reorder-triple"];
	Object -> Object [fillcolor="red", label="reset-object-batch"];
	Triple -> Triple [fillcolor="red", label="retrieve-triple-objects"];
	Triple -> Triple [fillcolor="red", label="sort-triples"];
	String -> String [fillcolor="red", label="split-lines"];
	XmlReceiver -> StreamReceiver [fillcolor="red", label="split-xml-elements"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="stream-count"];
	StreamReceiver -> StreamReceiver [fillcolor="red", label="stream-tee"];
	StreamReceiver -> Triple [fillcolor="red", label="stream-to-triples"];
	StreamReceiver -> String [fillcolor="red", label="stream-to-xml"];
	ListMap -> StreamReceiver [fillcolor="red", label="string-list-map-to-stream"];
	Object -> String [fillcolor="red", label="template"];
	Object -> Object [fillcolor="red", label="thread-object-tee"];
	StreamReceiver -> Document [fillcolor="red", label="to-jdom-document"];
	Triple -> StreamReceiver [fillcolor="red", label="triples-to-stream"];
	String -> String [fillcolor="red", label="validate-json"];
	Object -> Object [fillcolor="red", label="wait-for-inputs"];
	Object -> Void [fillcolor="red", label="write"];
	Object -> Void [fillcolor="red", label="write-files"];
	Triple -> Void [fillcolor="red", label="write-triple-objects"];
	Triple -> Void [fillcolor="red", label="write-triples"];
	StreamReceiver -> Void [fillcolor="red", label="write-xml-files"];
	XmlReceiver -> XmlReceiver [fillcolor="red", label="xml-tee"];
}
